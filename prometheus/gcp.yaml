tosca_definitions_version: cloudify_dsl_1_5

imports:
  - cloudify/types/types.yaml
  - plugin:cloudify-gcp-plugin?version= >=1.6.0
  - plugin:cloudify-ansible-plugin
  -  plugin:cloudify-utilities-plugin?version= >=1.22.1
  - includes/application.yaml

inputs:

  region:
    type: string
    description: The GCP region to deploy the application in, such as 'us-west1'.
    default: 'us-west1'

  zone:
    type: string
    description: The GCP zone to deploy the application in, such as 'us-west1-a'.
    default: 'us-west1-a'

  env_name:
    type: string
    default: 'p'

  network_name:
    type: string
    description: The name of your GCP Virtual Network.
    default: { concat: [ {get_input: env_name}, 'net'] }

  subnet_name:
    type: string
    description: The name of your GCP Virtual Network.
    default: { concat: [ {get_input: env_name}, 'subnet'] }

  image:
    type: string
    description: A Centos 7 image.
    default: https://www.googleapis.com/compute/v1/projects/centos-cloud/global/images/centos-7-v20170523

  instance_type:
    type: string
    description: A small GCP machine type.
    default: n1-standard-2

  agent_user:
    description: >
      The username of the agent running on the instance created from the image.
    default: 'centos'

  prometheus_scrape_jobs:
    description: a list of jobs.

  agent_key_name:
    type: string
    default: agent_key

dsl_definitions:

  client_config: &gcp_config
    auth: { get_secret: gcp_credentials }
    zone: { get_input: zone }

node_templates:

  network:
    type: cloudify.gcp.nodes.Network
    properties:
      name: { get_input: network_name }
      gcp_config: *gcp_config
      auto_subnets: false

  subnet:
    type: cloudify.gcp.nodes.SubNetwork
    properties:
      name: { get_input: subnet_name }
      region: { get_input: region }
      subnet: 10.11.12.0/22
      gcp_config: *gcp_config
    relationships:
    - type: cloudify.gcp.relationships.contained_in_network
      target: network

  firewall:
    type: cloudify.gcp.nodes.FirewallRule
    properties:
      gcp_config: *gcp_config
      allowed:
        tcp:
          - 0-65535
        udp:
          - 0-65535
      sources:
        - 0.0.0.0/0
    relationships:
      - type: cloudify.relationships.connected_to
        target: network

  prometheus-host:
    type: cloudify.gcp.nodes.Instance
    properties:
      gcp_config: *gcp_config
      agent_config:
        install_method: none
        key: { get_attribute: [agent_key, private_key_export] }
        user: { get_input: agent_user }
      use_public_ip: true
      image_id: { get_input: image }
      instance_type: { get_input: instance_type }
      zone: { get_input: zone }
      external_ip: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/gcp/key.py
          executor: central_deployment_agent
          inputs:
            user: { get_input: agent_user }
            ssh_keys:
              - { get_attribute: [agent_key, public_key_export] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: subnet
      - type: cloudify.relationships.depends_on
        target: agent_key

  agent_key:
    type: cloudify.keys.nodes.RSAKey
    properties:
      resource_config:
        key_name: { get_input: agent_key_name }
        openssh_format: true
      use_secret_store: true
      use_secrets_if_exist: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: keys.cloudify_ssh_key.operations.create
          inputs:
            store_private_key_material: true
