tosca_definitions_version: cloudify_dsl_1_3

description: Install Kubernetes using Kubespray on Azure.

imports:
  - http://cloudify.co/spec/cloudify/4.5.5/types.yaml
  - plugin:cloudify-azure-plugin
  - plugin:cloudify-ansible-plugin
  - includes/cloud-init.yaml
  - includes/application.yaml

inputs:

  subscription_id:
    type: string
    default: { get_secret: azure_subscription_id }

  tenant_id:
    type: string
    default: { get_secret: azure_tenant_id }

  client_id:
    type: string
    default: { get_secret: azure_client_id }

  client_secret:
    type: string
    default: { get_secret: azure_client_secret }

  location:
    type: string
    description: Your Azure Region.

  image:
    default:
      publisher: OpenLogic
      offer: CentOS
      sku: '7-CI'
      version: latest

  size:
    default: Standard_A3

  resource_prefix:
    default: prom_

  resource_suffix:
    default: '0'

  agent_user:
    description: The user name of the agent on the instance created from the image.
    default: centos

  public_subnet_cidr:
    type: string
    default: 10.10.0.0/24

  prometheus_scrape_jobs:
    description: a list of jobs.

dsl_definitions:

  azure_config: &client_config
    subscription_id: { get_input: subscription_id }
    tenant_id: { get_input: tenant_id }
    client_id: { get_input: client_id }
    client_secret: { get_input: client_secret }
    endpoints_active_directory: https://login.microsoftonline.com
    endpoints_resource_manager: https://management.azure.com
    endpoint_resource: https://management.core.windows.net/
    endpoint_verify: true
    scale_name_separator: "_"
    scale_name_suffix_chars: "1234567890"
    certificate: ""
    thumbprint: ""

node_templates:

  resource-group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      azure_config: *client_config
      location: { get_input: location }

  network:
    type: cloudify.azure.nodes.network.VirtualNetwork
    properties:
      azure_config: *client_config
      location: { get_input: location }
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource-group

  security-group:
    type: cloudify.azure.nodes.network.NetworkSecurityGroup
    properties:
      azure_config: *client_config
      location: { get_input: location }
      resource_config:
        securityRules:
          - name: tcp_access
            properties:
              description: TCP access
              protocol: Tcp
              sourcePortRange: '*'
              destinationPortRange: 0-65535
              sourceAddressPrefix: '*'
              destinationAddressPrefix: '*'
              priority: 100
              access: Allow
              direction: Inbound
          - name: udp_access
            properties:
              description: UDP access
              protocol: Udp
              sourcePortRange: '*'
              destinationPortRange: 0-65535
              sourceAddressPrefix: '*'
              destinationAddressPrefix: '*'
              priority: 200
              access: Allow
              direction: Inbound
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource-group

  availability-set:
    type: cloudify.azure.nodes.compute.AvailabilitySet
    properties:
      azure_config: *client_config
      location: { get_input: location }
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource-group

  storage-account:
    type: cloudify.azure.nodes.storage.StorageAccount
    properties:
      azure_config: *client_config
      location: { get_input: location }
      resource_config:
        accountType: Standard_LRS
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource-group

  public-subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      azure_config: *client_config
      location: { get_input: location }
      resource_config:
        addressPrefix: { get_input: public_subnet_cidr }
    relationships:
      - type: cloudify.azure.relationships.contained_in_virtual_network
        target: network

  prometheus-host-ip:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      azure_config: *client_config
      location: { get_input: location }
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource-group

  prometheus-host-ip-config:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      azure_config: *client_config
      location: { get_input: location }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource-group
      - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
        target: public-subnet
      - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
        target: prometheus-host-ip

  prometheus-host-nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      azure_config: *client_config
      location: { get_input: location }
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource-group
      - type: cloudify.azure.relationships.nic_connected_to_network_security_group
        target: security-group
      - type: cloudify.azure.relationships.nic_connected_to_ip_configuration
        target: prometheus-host-ip-config

  prometheus-host:
    type: cloudify.azure.nodes.compute.VirtualMachine
    properties:
      azure_config: *client_config
      agent_config:
        install_method: none
        key: { get_secret: agent_key_private }
        user: { get_input: agent_user }
      use_public_ip: true
      os_family: linux
      retry_after: 60
      location: { get_input: location }
      storage_endpoint: core.windows.net
      resource_config:
        hardwareProfile:
          vmSize: { get_input: size }
        storageProfile:
          imageReference: { get_input: image }
        osProfile:
          customData:  { get_attribute: [ cloud_init, cloud_config ] }
          adminUsername: { get_input: agent_user }
          adminPassword: ''
          linuxConfiguration:
            ssh:
              publicKeys:
              - keydata: { get_secret: agent_key_public }
                path: { concat: [ '/home/', { get_input: agent_user }, '/.ssh/authorized_keys' ] }
            disablePasswordAuthentication: true
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource-group
      - type: cloudify.azure.relationships.connected_to_storage_account
        target: storage-account
      - type: cloudify.azure.relationships.connected_to_availability_set
        target: availability-set
      - type: cloudify.azure.relationships.connected_to_nic
        target: prometheus-host-nic
      - type: cloudify.relationships.depends_on
        target: cloud_init
