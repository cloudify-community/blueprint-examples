tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/6.3.0/types.yaml
  - plugin:cloudify-azure-plugin
  - plugin:cloudify-utilities-plugin

inputs:

  retry_after:
    type: integer
    default: 5

  resource_prefix:
    type: string
    description: Prefix of every resource created at this deployment on Azure.
    default: { get_secret: resource_prefix }

  resource_suffix:
    type: string
    description: Suffix of every resource created at this deployment on Azure.
    default: { get_secret: resource_suffix }

  azure_network_deployment_name:
    type: string
    default: VNFM-Networking-Prov-Azure-networks

  vm_size:
    type: string
    required: true
    default: Standard_B2s

  vm_os_family:
    type: string
    required: true
    default: linux

  vm_image_publisher:
    type: string
    required: true
    default: fortinet

  vm_image_offer:
    type: string
    required: true
    default: fortinet_fortigate-vm_v5

  vm_image_sku:
    type: string
    required: true
    default: fortinet_fg-vm

  vm_image_version:
    type: string
    required: true
    default: 6.0.7

  vnf_vm_name:
    type: string
    default: fortigate

  fortigate_license_filename:
    type: string
    description: Name of the Fortigate license file
      (It will be uploaded to Fortigate VM with this name).
      It should have .lic file extension.
    default: FGVM02TM19000054.lic

dsl_definitions:
  client_config: &azure_config
    subscription_id: { get_secret: azure_subscription_id }
    tenant_id: { get_secret: azure_tenant_id }
    client_id: { get_secret: azure_client_id }
    client_secret: { get_secret: azure_client_secret }

node_templates:

  resource_group:
    type: cloudify.nodes.azure.ResourceGroup
    properties:
      client_config: *azure_config
      name: { get_capability: [ { get_input: azure_network_deployment_name }, resource_group ] }
      use_external_resource: true

  storage_account:
    type: cloudify.nodes.azure.storage.StorageAccount
    properties:
      client_config: *azure_config
      name: { concat: [ { get_input: resource_prefix }, 'storageaccount', { get_input: resource_suffix } ] }
      location: { get_secret: azure_location }
      retry_after: { get_input: retry_after }
      resource_config:
        accountType: Standard_LRS
    relationships:
      - type: cloudify.relationships.azure.contained_in_resource_group
        target: resource_group

  virtual_network:
    type: cloudify.azure.nodes.network.VirtualNetwork
    properties:
      client_config: *azure_config
      use_external_resource: true
      name: { get_capability: [ { get_input: azure_network_deployment_name }, virtual_network] }
    relationships:
      - type: cloudify.relationships.azure.contained_in_resource_group
        target: resource_group

  mgmt_subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      client_config: *azure_config
      use_external_resource: true
      name: { get_capability: [ { get_input: azure_network_deployment_name }, mgmt_subnet] }
    relationships:
      - type: cloudify.relationships.azure.contained_in_virtual_network
        target: virtual_network

  wan_subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      client_config: *azure_config
      use_external_resource: true
      name: { get_capability: [ { get_input: azure_network_deployment_name }, wan_subnet] }
    relationships:
      - type: cloudify.relationships.azure.contained_in_virtual_network
        target: virtual_network

  lan_subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      client_config: *azure_config
      use_external_resource: true
      name: { get_capability: [ { get_input: azure_network_deployment_name }, lan_subnet] }
    relationships:
      - type: cloudify.relationships.azure.contained_in_virtual_network
        target: virtual_network

  network_security_group:
    type: cloudify.azure.nodes.network.NetworkSecurityGroup
    properties:
      client_config: *azure_config
      use_external_resource: true
      name: { get_capability: [ { get_input: azure_network_deployment_name }, network_security_group] }
    relationships:
      - type: cloudify.relationships.azure.contained_in_resource_group
        target: resource_group

  mgmt_nic_ip_cfg:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      client_config: *azure_config
      name: { concat: [ { get_input: resource_prefix }, 'fg_mgmt_ic', { get_input: resource_suffix } ] }
      location: { get_secret: azure_location }
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
      - type: cloudify.relationships.azure.contained_in_resource_group
        target: resource_group
      - type: cloudify.relationships.azure.ip_configuration_connected_to_subnet
        target: mgmt_subnet
      - type: cloudify.relationships.azure.ip_configuration_connected_to_public_ip
        target: mgmt_public_ip_address

  mgmt_public_ip_address:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      client_config: *azure_config
      use_external_resource: false
      name: { concat: [ { get_input: resource_prefix }, 'fg_mgmt_ia', { get_input: resource_suffix } ] }
      location: { get_secret: azure_location }
      retry_after: { get_input: retry_after }
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
      - type: cloudify.relationships.azure.contained_in_resource_group
        target: resource_group

  mgmt_nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      client_config: *azure_config
      location: { get_secret: azure_location }
      name: { concat: [ { get_input: resource_prefix }, 'fg_mgmt_n', { get_input: resource_suffix } ] }
      retry_after: { get_input: retry_after }
      primary: true
    relationships:
      - type: cloudify.relationships.azure.nic_connected_to_ip_configuration
        target: mgmt_nic_ip_cfg
      - type: cloudify.relationships.azure.contained_in_resource_group
        target: resource_group
      - type: cloudify.relationships.azure.nic_connected_to_network_security_group
        target: network_security_group

  wan_nic_ip_cfg:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      client_config: *azure_config
      location: { get_secret: azure_location }
      name: { concat: [ { get_input: resource_prefix }, 'fg_wan_ic', { get_input: resource_suffix } ] }
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
      - type: cloudify.relationships.azure.contained_in_resource_group
        target: resource_group
      - type: cloudify.relationships.azure.ip_configuration_connected_to_subnet
        target: wan_subnet

  wan_nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      client_config: *azure_config
      location: { get_secret: azure_location }
      name: { concat: [ { get_input: resource_prefix }, 'fg_wan_n', { get_input: resource_suffix } ] }
      retry_after: { get_input: retry_after }
      primary: false
    relationships:
      - type: cloudify.relationships.azure.nic_connected_to_ip_configuration
        target: wan_nic_ip_cfg
      - type: cloudify.relationships.azure.contained_in_resource_group
        target: resource_group
      - type: cloudify.relationships.azure.nic_connected_to_network_security_group
        target: network_security_group

  lan_nic_ip_cfg:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      client_config: *azure_config
      location: { get_secret: azure_location }
      name: { concat: [ { get_input: resource_prefix }, 'fg_lan_ic', { get_input: resource_suffix } ] }
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
      - type: cloudify.relationships.azure.contained_in_resource_group
        target: resource_group
      - type: cloudify.relationships.azure.ip_configuration_connected_to_subnet
        target: lan_subnet

  lan_nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      client_config: *azure_config
      location: { get_secret: azure_location }
      name: { concat: [ { get_input: resource_prefix }, 'fg_lan_n', { get_input: resource_suffix } ] }
      retry_after: { get_input: retry_after }
      primary: false
    relationships:
      - type: cloudify.relationships.azure.nic_connected_to_ip_configuration
        target: lan_nic_ip_cfg
      - type: cloudify.relationships.azure.contained_in_resource_group
        target: resource_group
      - type: cloudify.relationships.azure.nic_connected_to_network_security_group
        target: network_security_group

  # Cloud config for fortigate, responsible for license file upload which is being applied at installation
  cloud_config:
    type: cloudify.nodes.CloudInit.CloudConfig
    properties:
      resource_config:
        write_files:
          - path: { get_input: fortigate_license_filename }
            owner: root:root
            permissions: '0444'
            content: { get_secret: fortigate_license }

  vnf_vm:
    type: cloudify.azure.nodes.compute.VirtualMachine
    properties:
      agent_config:
        install_method: none
      client_config: *azure_config
      location: { get_secret: azure_location }
      retry_after: { get_input: retry_after }
      name: { concat: [ { get_input: resource_prefix }, { get_input: vnf_vm_name }, { get_input: resource_suffix } ] }
      os_family: { get_input: vm_os_family }
      plan:
        name: { get_input: vm_image_sku }
        publisher: { get_input: vm_image_publisher }
        product: { get_input: vm_image_offer }
      resource_config:
        hardwareProfile:
          vmSize: { get_input: vm_size }
        storageProfile:
          imageReference:
            publisher: { get_input: vm_image_publisher }
            offer: { get_input: vm_image_offer }
            sku: { get_input: vm_image_sku }
            version: { get_input: vm_image_version }
        osProfile:
          customData: { get_attribute: [ cloud_config, cloud_config ] }
          computerName: { get_property: [SELF, name] }
          adminUsername: { get_secret: fortigate_username }
          adminPassword: { get_secret: fortigate_password }
    relationships:
      - type: cloudify.relationships.azure.contained_in_resource_group
        target: resource_group
      - type: cloudify.relationships.azure.connected_to_storage_account
        target: storage_account
      - type: cloudify.relationships.azure.connected_to_nic
        target: mgmt_nic
      - type: cloudify.relationships.azure.connected_to_nic
        target: wan_nic
      - type: cloudify.relationships.azure.connected_to_nic
        target: lan_nic
      - type: cloudify.relationships.depends_on
        target: cloud_config

capabilities:

  vm_public_ip_address:
    description: 'vm public ip address.'
    value: { get_attribute: [vnf_vm, public_ip_address] }
  wan_ip:
    description: 'wan nic ip.'
    value: { get_attribute: [wan_nic, ip] }
  lan_ip:
    description: 'lan nic ip.'
    value: { get_attribute: [lan_nic, ip] }
