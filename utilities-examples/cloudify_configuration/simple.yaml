tosca_definitions_version: cloudify_dsl_1_5

description: This blueprint is a configuration example.

imports:
  - cloudify/types/types.yaml
  - plugin:cloudify-utilities-plugin

inputs:

  terminal_ip:
    type: string
    description: >
       terminal server ip
    default: 127.0.0.1

  terminal_user:
    type: string
    description: >
       terminal server user
    default: root

  terminal_password:
    type: string
    description: >
       terminal server user password
    default: ssh_password

  terminal_key_content:
    type: string
    description: >
       terminal server user rsa key content, can be used instead password
    default: { get_secret: agent_key_private }

  terminal_port:
    type: integer
    description: >
       terminal server port, for cisco ssh by default 22
    default: 22

  parameters_json:
    type: dict
    default:
      RoutePublic: Public
      RouteVoice: true

node_types:

  terminal:
    derived_from: cloudify.terminal.raw
    properties:
      params_list:
        default: {}
      params:
        default: {}
      terminal_auth:
        default: {}

node_templates:

  configuration:
    type: configuration_loader
    properties:
      parameters_json: { get_input: parameters_json }

  linux_impl:
    type: terminal
    properties:
      params_list:
        - RouteExternal
        - RouteInternal
        - JpPrimary
        - JpSecondary
        - RoutePublic
        - RouteNat
      params:
        JpPrimary: true
        JpSecondary: false
      terminal_auth:
        user: { get_input: terminal_user }
        password: { get_input: terminal_password }
        ip: { get_input: terminal_ip }
        key_content: { get_input: terminal_key_content }
        port: { get_input: terminal_port }
        promt_check:
          - '#'
          - '$'
    interfaces:
      cloudify.interfaces.lifecycle:
        # will show varibales before update configuration
        create:
          inputs:
            calls:
              - template: ssh.cmd
                params: { get_attribute: [SELF, params] }
        # will show varibales after update
        configure:
          inputs:
            calls:
              - template: ssh.cmd
                params: { get_attribute: [SELF, params] }
        update:
          inputs:
            calls:
              - template: ssh.cmd
                params: { get_attribute: [SELF, params] }
        is_alive:
          inputs:
            calls:
              - template: isalive.cmd
    relationships:
      - type: load_from_config
        target: configuration
