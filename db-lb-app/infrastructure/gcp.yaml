tosca_definitions_version: cloudify_dsl_1_5

imports:
  - https://cloudify.co/spec/cloudify/6.4.0/types.yaml
  - plugin:cloudify-gcp-plugin?version= >=1.8.5
  - plugin:cloudify-utilities-plugin
  - includes/cloud-init.yaml

labels:

  csys-obj-type:
    values:
      - environment

  csys-obj-parent:
    values:
      - gcp-example-network

inputs:

  env_name:
    type: string
    default: 'infra_'

  image:
    type: string
    description: A Centos 7 image.
    default: https://www.googleapis.com/compute/v1/projects/centos-cloud/global/images/centos-7-v20170523

  instance_type:
    type: string
    description: A small GCP machine type.
    default: n1-standard-1

  agent_user:
    type: string
    description: >
      The username of the agent running on the instance created from the image.
    default: 'centos'

dsl_definitions:

  client_config: &gcp_config
    auth: { get_secret: gcp_credentials }
    zone: { get_environment_capability: zone }

node_templates:

  host:
    type: cloudify.nodes.gcp.Instance
    properties:
      client_config: *gcp_config
      agent_config:
        install_method: none
        key: { get_secret: agent_key_private }
        user: { get_input: agent_user }
      use_public_ip: true
      image_id: { get_input: image }
      instance_type: { get_input: instance_type }
      zone: { get_environment_capability: zone }
      external_ip: true
      block_project_ssh_keys: true
      startup_script:
        type: string
        script: |
          #!/bin/bash
          yum -t -y install libsemanage-python
    relationships:
      - type: cloudify.relationships.depends_on
        target: subnet
      - type: cloudify.relationships.depends_on
        target: cloud_init
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/gcp/key.py
          executor: central_deployment_agent
          inputs:
            user: { get_input: agent_user }
            ssh_keys:
              - { get_secret: agent_key_public }

  firewall:
    type: cloudify.nodes.gcp.FirewallRule
    properties:
      client_config: *gcp_config
      allowed:
        tcp:
          - 22
          - 80
          - 3306
          - 4444
          - 4567
          - 4568
          - 9100
      sources:
        - 0.0.0.0/0
    relationships:
      - type: cloudify.relationships.connected_to
        target: network

  subnet:
    type: cloudify.nodes.gcp.SubNetwork
    properties:
      use_external_resource: true
      name: { get_environment_capability: subnet }
      region: { get_environment_capability: region }
      subnet: 10.11.12.0/22
      client_config: *gcp_config
    relationships:
      - type: cloudify.relationships.gcp.contained_in_network
        target: network

  network:
    type: cloudify.nodes.gcp.Network
    properties:
      use_external_resource: true
      name: { get_environment_capability: network }
      client_config: *gcp_config
      auto_subnets: false

groups:

  scalable_compute:
    members:
      - host

capabilities:

  ip:
    description: Host IP
    value: { get_attribute: [ host, ip ] }
