tosca_definitions_version: cloudify_dsl_1_3

description: Openstack DB LB APP infrastructure.

imports:
  - https://cloudify.co/spec/cloudify/6.3.0/types.yaml
  - plugin:cloudify-openstack-plugin?version= >=3.2.2
  - plugin:cloudify-utilities-plugin
  - includes/cloud-init.yaml

inputs:

  env_name:
    description: A prefix for resource names for resources that will be created, for example, db or lb.
    type: string

  network_deployment_name:
    description: >
      The deployment ID of an existing deployment.
      For example, openstack-example-network.
      The following capabilities should be exposed:
      - external_network
      - public_network_router
      - public_network
      - public_subnet
    type: string
    default: openstack

  openstack_region:
    description: >
      The Openstack region_name, for example RegionOne.
    type: string
    default: { get_secret: openstack_region }

  public_subnet_cidr:
    description: The CIDR of the public subnet.
    type: string
    default: 10.10.1.0/24

  agent_user:
    description: The SSH username.
    type: string
    default: centos

  image_id:
    description: The ID of Centos 7 image that is available in your account.
    type: string
    default: { get_secret: base_image_id }

  flavor_id:
    description: The ID of an appropriate flavor that is available in your account, for example 3.
    type: string
    default: { get_secret: base_flavor_id }

  user_domain_name:
    description: Openstack user domain name.
    type: string
    default:  default

  project_domain_name:
    description: The name of your OpenStack project.
    type: string
    default:  default


dsl_definitions:

  client_config: &client_config
    auth_url: { get_secret: openstack_auth_url }
    username: { get_secret: openstack_username }
    password: { get_secret: openstack_password }
    project_name: { get_secret: openstack_project_name }
    region_name: { get_input: openstack_region }
    user_domain_name: { get_input: user_domain_name }
    project_domain_name: { get_input: project_domain_name }

node_templates:

  host:
    type: cloudify.nodes.openstack.Server
    properties:
      client_config: *client_config
      agent_config:
        install_method: none
        key: { get_secret: agent_key_private }
        user: { get_input: agent_user }
      use_public_ip: true
      resource_config:
        name: { concat: [ { get_input: env_name }, '-infra-host' ] }
        image_id: { get_input: image_id }
        flavor_id: { get_input: flavor_id }
        user_data: { get_attribute: [ cloud_init, cloud_config ] }
    relationships:
      - type: cloudify.relationships.openstack.server_connected_to_port
        target: nic
      - type: cloudify.relationships.depends_on
        target: ip
      - type: cloudify.relationships.depends_on
        target: cloud_init

  ip:
    type: cloudify.nodes.openstack.FloatingIP
    properties:
      client_config: *client_config
    relationships:
      - type: cloudify.relationships.connected_to
        target: external_network
      - type: cloudify.relationships.connected_to
        target: nic

  nic:
    type: cloudify.nodes.openstack.Port
    properties:
      client_config: *client_config
      resource_config:
        network_id: { get_attribute: [ network, id ] }
    relationships:
      - type: cloudify.relationships.connected_to
        target: subnet
      - type: cloudify.relationships.connected_to
        target: security_group

  security_group:
    type: cloudify.nodes.openstack.SecurityGroup
    properties:
      client_config: *client_config
      resource_config:
        name: { concat: [ { get_input: env_name }, '-infra-group' ] }
        description: 'db lb app infra group'
      security_group_rules:
        - direction: ingress
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - direction: ingress
          protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - direction: ingress
          protocol: tcp
          port_range_min: 3306
          port_range_max: 3306
        - direction: ingress
          protocol: tcp
          port_range_min: 4444
          port_range_max: 4444
        - direction: ingress
          protocol: tcp
          port_range_min: 4567
          port_range_max: 4568
        - direction: ingress
          protocol: tcp
          port_range_min: 9100
          port_range_max: 9100

  subnet:
    type: cloudify.nodes.openstack.Subnet
    properties:
      client_config: *client_config
      use_external_resource: true
      resource_config:
        id: { get_capability: [ { get_input: network_deployment_name }, public_subnet ] }
    relationships:
      - type: cloudify.relationships.contained_in
        target: network
      - type: cloudify.relationships.openstack.subnet_connected_to_router
        target: router

  network:
    type: cloudify.nodes.openstack.Network
    properties:
      client_config: *client_config
      use_external_resource: true
      resource_config:
        id:  { get_capability: [ { get_input: network_deployment_name }, public_network ] }


  router:
    type: cloudify.nodes.openstack.Router
    properties:
      client_config: *client_config
      use_external_resource: true
      resource_config:
        id: { get_capability: [ { get_input: network_deployment_name }, public_network_router ] }
    relationships:
      - type: cloudify.relationships.connected_to
        target: external_network

  external_network:
    type: cloudify.nodes.openstack.Network
    properties:
      client_config: *client_config
      use_external_resource: true
      resource_config:
        id: { get_capability: [ { get_input: network_deployment_name }, external_network ] }
        kwargs:
          routing:
            external: true

groups:

  scalable_compute:
    members:
      - host
      - nic
      - ip

capabilities:

  ip:
    description: Host IP
    value: { get_attribute: [ host, ip ] }
