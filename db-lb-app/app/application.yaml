tosca_definitions_version: cloudify_dsl_1_3

description: Install Drupal7 on infrastructure.

imports:
  - http://cloudify.co/spec/cloudify/4.5.5/types.yaml
  - infrastructure--blueprint:infrastructure
  - plugin:cloudify-ansible-plugin

inputs:

  database_name:
    type: string
    default: drupal

  database_user:
    type: string
    default: drupal

  database_password:
    type: string
    default: 'U2FsdGVkX19VxMEA6AdZt5fccsn/JsFU4eGpttt13JI='

node_templates:

  drupal:
    type: cloudify.nodes.Root
    relationships:
      - type: cloudify.relationships.depends_on
        target: infrastructure--host
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure:
              implementation: ansible.cloudify_ansible.tasks.ansible_requires_host
              inputs:
                group_name: server
                host_config:
                  ansible_host: { get_attribute: [ infrastructure--host, ip ] }
                  ansible_user: { get_property: [ infrastructure--host, agent_config, user ] }
                  ansible_ssh_private_key_file: { get_property: [ infrastructure--host, agent_config, key ] }
                  ansible_become: true
                  ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: ansible.cloudify_ansible.tasks.run
          inputs:
            site_yaml_path: drupal/playbook.yaml
            sources: { get_attribute: [ SELF, sources ] }
            run_data:
              drupal_database: { get_input: database_name }
              drupal_username:  { get_input: database_user }
              drupal_password:  { get_input: database_password }
              drupal_database_host: { get_capability: [ lb, endpoint] }

outputs:

  url:
    value: { concat: [ "http://", { get_attribute: [ infrastructure--host, ip ] }, "/drupal7/install.php" ]}
