tosca_definitions_version: cloudify_dsl_1_4

description: >
  This blueprint create a managed cluster.

imports:
  - https://cloudify.co/spec/cloudify/6.4.0/types.yaml
  - plugin:cloudify-gcp-plugin?version= >=1.6.0
  - plugin:cloudify-kubernetes-plugin?version= !=2.11.0

inputs:
  gcp_credentials:
    type: string
    default: { get_secret: gcp_credentials }

  zone:
    type: string
    default: 'us-west1-a'

  resource_prefix:
    type: string
    default: ex2

  env_name:
    type: string
    default: { get_input: resource_prefix }

dsl_definitions:

  client_config: &client_config
    auth: { get_input: gcp_credentials }
    zone: { get_input: zone }

node_templates:

  kubernetes-cluster:
    type: cloudify.gcp.nodes.KubernetesCluster
    properties:
      name: { concat: [ { get_input: env_name }, '-cluster']}
      client_config: *client_config

  kubernetes-cluster-attributes:
    type: cloudify.gcp.nodes.KubernetesCluster
    properties:
      use_external_resource: true
      name: { concat: [ { get_input: env_name }, '-cluster']}
      client_config: *client_config
    relationships:
      - type: cloudify.relationships.depends_on
        target: kubernetes-cluster

  kubernetes-cluster-node-pool:
    type: cloudify.gcp.nodes.KubernetesNodePool
    properties:
      name: { concat: [ { get_input: env_name }, '-node-pool-1']}
      cluster_id: { get_property: [ kubernetes-cluster, name] }
      additional_settings:
        config:
          machineType: n1-standard-2
        initialNodeCount: 2
        autoscaling:
          enabled: true
          minNodeCount: 2
          maxNodeCount: 5
      client_config: *client_config
    relationships:
      - type: cloudify.relationships.depends_on
        target: kubernetes-cluster

  sanity_pod:
    type: cloudify.nodes.kubernetes.resources.FileDefinedResource
    properties:
      client_config:
        authentication:
          gcp_service_account: { get_input: gcp_credentials }
        configuration:
          api_options:
            host: { concat: [ 'https://', { get_attribute: [kubernetes-cluster-attributes, endpoint] }]}
            verify_ssl: false
            debug: false
      validate_resource_status: true
      file:
        resource_path: resources/template.yaml
    relationships:
      - type: cloudify.relationships.depends_on
        target: kubernetes-cluster-attributes
      - type: cloudify.relationships.depends_on
        target: kubernetes-cluster-node-pool
      - type: cloudify.relationships.depends_on
        target: kubernetes-cluster
    interfaces:
      cloudify.interfaces.lifecycle:
        precreate: {}
        create:
          implementation: kubernetes.cloudify_kubernetes.tasks.file_resource_create
        configure: {}
        start:
          implementation: kubernetes.cloudify_kubernetes.tasks.file_resource_delete
        poststart: {}
        prestop: {}
        stop: {}
        delete: {}
        postdelete: {}

capabilities:

  endpoint:
    description: 'The external endpoint of the application.'
    value: { concat: [ 'https://', { get_attribute: [kubernetes-cluster-attributes, endpoint] }]}

outputs:

  endpoint:
    description: 'The external endpoint of the application.'
    value: { concat: [ 'https://', { get_attribute: [kubernetes-cluster-attributes, endpoint] }]}
