tosca_definitions_version: cloudify_dsl_1_5

imports:
  - https://cloudify.co/spec/cloudify/6.4.0/types.yaml
  - plugin:cloudify-azure-plugin
  - plugin:cloudify-utilities-plugin?version= >=1.22.1

inputs:

  env_name:
    type: string
    description: Control parameters for names in resources.
    default: 'cfyinfraarm'

  resource_prefix:
    default: {  get_input: env_name }

  resource_suffix:
    default: '0'

  resource_group_name:
    type: string
    description: Your Azure Resource Group.
    default: { concat: [ { get_input: resource_prefix }, rg, { get_input: resource_suffix } ] }

  network_name:
    type: string
    description: Your Azure Virtual Network.
    default: { concat: [ { get_input: resource_prefix }, vn, { get_input: resource_suffix } ] }

  subnet_name:
    type: string
    description: Your Azure Virtual Network Subnet.
    default: { concat: [ { get_input: resource_prefix }, sub, { get_input: resource_suffix } ] }

  location:
    type: string
    description: Your Azure Region.
    default: eastus2

  priority:
    type: string
    description: The VM's priority
    constraints:
      - valid_values:
          - Regular
          - Low
          - Spot
    default: 'Regular'

  image:
    description: >
      Image to use.
    default:
      publisher: OpenLogic
      offer: CentOS
      sku: "7.6"
      version: latest

  size:
    description: >
       Name of Virtual Machine Size in Azure.
    type: string
    default: Standard_B1s

  retry_after:
    type: integer
    default: 60

  agent_user:
    description: The user name of the agent on the instance created from the image.
    default: centos

  agent_key_name:
    type: string
    default: agent_key

dsl_definitions:

  azure_config: &azure_config
    subscription_id: { get_secret: azure_subscription_id }
    tenant_id: { get_secret: azure_tenant_id }
    client_id: { get_secret: azure_client_id }
    client_secret: { get_secret: azure_client_secret }

node_templates:
  deployment:
    type: cloudify.azure.Deployment
    properties:
      azure_config: *azure_config
      location: { get_input: location }
      name: { get_input: resource_group_name }
      params:
        location: { get_input: location }
        vnet_name: { get_input: network_name }
        subnet_name: { get_input: subnet_name }
        vm_size: { get_input: size }
        image: { get_input: image }
        nsg_name: { concat: [ { get_input: resource_prefix }, nsg, { get_input: resource_suffix } ] }
        public_ip_name: { concat: [ { get_input: resource_prefix }, ip, { get_input: resource_suffix } ] }
        storage_account_name: { concat: [ { get_input: resource_prefix }, sa, { get_input: resource_suffix } ] }
        vm_name: { concat: [ { get_input: resource_prefix }, vm, { get_input: resource_suffix } ] }
        nic_name: { concat: [ { get_input: resource_prefix }, nic, { get_input: resource_suffix } ] }
        ip_config_name: { concat: [ { get_input: resource_prefix }, ipcfg, { get_input: resource_suffix } ] }
        priority: { get_input: priority }
        admin_user: { get_input: agent_user }
        public_key_data: { get_attribute: [agent_key, public_key_export] }
      template_file: 'resources/arm/environment.json'
    relationships:
      - type: cloudify.relationships.depends_on
        target: agent_key

  agent_key:
    type: cloudify.keys.nodes.RSAKey
    properties:
      resource_config:
        key_name: { get_input: agent_key_name }
        openssh_format: true
      use_secret_store: true
      use_secrets_if_exist: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: keys.cloudify_ssh_key.operations.create
          inputs:
            store_private_key_material: true

capabilities:
  endpoint:
    description: The external endpoint of the application.
    value: { get_attribute: [ deployment, outputs, public_ip, value ] }
  user:
    description: user ID.
    value: { get_input: agent_user }
  key_content:
    description: Private agent key
    value: { get_attribute: [agent_key, private_key_export] }
