tosca_definitions_version: cloudify_dsl_1_5

imports:
  - https://cloudify.co/spec/cloudify/6.4.0/types.yaml
  - plugin:cloudify-vsphere-plugin

inputs:

  vsphere_port:
    type: string
    default: '443'

  vsphere_allow_insecure:
    type: string
    default: true

  env_name:
    type: string
    description: Control parameters for names in resources.
    default: '1'

  resource_suffix:
    type: string
    default: { get_input: env_name }

  server_name:
    type: string
    default: { concat: [ 'example-vm-1', { get_input: resource_suffix } ] }

  template_name:
    type: string
    default: CentOS-7.8.2003-tmpl

  cpus:
    type: string
    default: 1

  memory:
    type: string
    default: 1024

  domain:
    type: string
    default: localdom

  dns_servers:
    type: list
    default: ['8.8.8.8']

  network_name:
    type: string
    default: Internal

  switch_distributed:
    type: boolean
    default: false

  use_dhcp:
    type: boolean
    default: true

  network_cidr:
    type: string
    default: 172.16.168.0/24

  gateway:
    type: string
    default: 172.16.168.1

  ip:
    type: string
    default: 172.16.168.201

  agent_user:
    type: string
    default: centos

  agent_key_private:
    type: string
    default: { get_secret: vsphere_private_key }

dsl_definitions:

  connection_config: &connection_config
    username: { get_secret: vsphere_username }
    password: { get_secret: vsphere_password }
    host: { get_secret: vsphere_host }
    port: { get_input: vsphere_port }
    datacenter_name: { get_secret: vsphere_datacenter_name }
    resource_pool_name: { get_secret: vsphere_resource_pool_name }
    auto_placement: { get_secret: vsphere_auto_placement }
    allow_insecure: { get_input: vsphere_allow_insecure }

node_templates:

  vm:
    type: cloudify.vsphere.nodes.Server
    properties:
      connection_config: *connection_config
      agent_config:
        install_method: none
      server:
        template: { get_input: template_name }
        cpus: { get_input: cpus }
        memory: { get_input: memory }
        name: { get_input: server_name }
      networking:
        domain: { get_input: domain }
        dns_servers: { get_input: dns_servers }
        connect_networks:
          - name: { get_input: network_name }
            management: true
            switch_distributed: { get_input: switch_distributed }
            use_dhcp: { get_input: use_dhcp }
            network: { get_input: network_cidr }
            gateway: { get_input: gateway }
            ip: { get_input: ip }

capabilities:

  endpoint:
    description: The external endpoint of the application.
    value: { get_attribute: [ vm, public_ip ] }

  user:
    description: user ID.
    value: { get_input: agent_user }

  key_content:
    description: Private SSH key
    value: { get_input: agent_key_private }
