tosca_definitions_version: cloudify_dsl_1_4

description: >
  This blueprint creates infrastructure on IBM Cloud using Terraform.
imports:
  - https://cloudify.co/spec/cloudify/6.4.0/types.yaml
  - plugin:cloudify-terraform-plugin?version= >=0.15.0
  - plugin:cloudify-utilities-plugin?version= >=1.22.1

inputs:

  region_name:
    type: string
    default: "eu-de"
    constraints:
      - valid_values: ["us-south", "br-sao", "ca-tor", "us-east", "eu-de", "eu-gb", "jp-osa", "au-syd", "jp-tok"]

  image:
    type: string
    description: IMB Cloud Image name
    default: "ibm-centos-7-6-minimal-amd64-2"

  agent_user:
    type: string
    default: centos

  agent_key_name:
    type: string
    default: agent_key

  location:
    type: string
    default: https://github.com/cloudify-community/tf-source/archive/refs/heads/main.zip

  source_path:
    type: string
    default: template/modules/ibm

  prefix:
    type: string
    default: cfy

node_templates:

  terraform:
    type: cloudify.nodes.terraform

  cloud_resources:
    type: cloudify.nodes.terraform.Module
    properties:
      resource_config:
        source:
          location: { get_input: location }
        source_path: { get_input: source_path }
        variables:
          ibmcloud_api_key: { get_secret: ibmcloud_api_key }
          region: { get_input: region_name }
          admin_key_public: { get_attribute: [agent_key, public_key_export] }
          prefix: { get_input: prefix }
          image: { get_input: image }
    relationships:
      - target: terraform
        type: cloudify.relationships.terraform.run_on_host
      - target: agent_key
        type: cloudify.relationships.depends_on

  agent_key:
    type: cloudify.keys.nodes.RSAKey
    properties:
      resource_config:
        key_name: { get_input: agent_key_name }
        openssh_format: true
      use_secret_store: true
      use_secrets_if_exist: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: keys.cloudify_ssh_key.operations.create
          inputs:
            store_private_key_material: true

capabilities:
  name:
    description: name
    value: { get_attribute: [ cloud_resources, resources, vm, instances, 0, attributes, id ] }

  user:
    description: user ID.
    value: { get_input: agent_user }

  key_content:
    description: Private agent key
    value: { get_attribute: [agent_key, private_key_export] }
