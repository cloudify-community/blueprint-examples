tosca_definitions_version: cloudify_dsl_1_3

description: >
  This blueprint installs an application using Cloudify on AWS.

imports:
  - https://cloudify.co/spec/cloudify/6.3.0/types.yaml
  - plugin:cloudify-aws-plugin
  - plugin:cloudify-utilities-plugin?version= >=1.22.1
  - plugin:cloudify-ansible-plugin
  - includes/hello-world-ansible.yaml

inputs:

  env_name:
    type: string
    default: 'helloworldexampleawscf'

  aws_access_key_id:
    type: string
    default: { get_secret: aws_access_key_id }

  aws_secret_access_key:
    type: string
    default: { get_secret: aws_secret_access_key }

  aws_region_name:
    type: string
    default: 'us-east-1'

  availability_zone:
    type: string
    default: { concat: [ { get_input: aws_region_name }, 'e' ] }

  vpc_cidr:
    type: string
    default: 172.30.0.0/16

  subnet_cidr:
    type: string
    default: 172.30.0.0/24

  key_pair_name:
    type: string
    default: { concat: [ 'hello_world_key', { get_input: env_name } ] }

  agent_key_name:
    type: string
    default: { concat: [ 'hello_world_key', { get_input: env_name } ] }

  agent_user:
    description: >
      The username of the agent running on the instance created from the image.
    type: string
    default: 'centos'

dsl_definitions:

  client_config: &client_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    aws_session_token: { get_secret: aws_session_token }
    region_name: { get_input: aws_region_name }

node_templates:

  hello_world_keypair:
    type: cloudify.nodes.aws.ec2.Keypair
    properties:
      client_config: *client_config
      resource_config:
        KeyName: { get_input: key_pair_name }
        PublicKeyMaterial: { get_attribute: [agent_key, public_key_export] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: agent_key

  vm:
    type: cloudify.nodes.aws.CloudFormation.Stack
    properties:
      client_config: *client_config
      resource_config:
        kwargs:
          StackName: Hello-World-Sample-Stack
          Parameters:
          - ParameterKey: InstanceType
            ParameterValue: m1.small
          - ParameterKey: KeyName
            ParameterValue: { get_input: key_pair_name }
          - ParameterKey: VpcCIDR
            ParameterValue: { get_input: vpc_cidr }
          - ParameterKey: SubnetCIDR
            ParameterValue: { get_input: subnet_cidr }
          TemplateURL: https://hello-world-cf-example.s3-eu-west-1.amazonaws.com/template.yaml
    relationships:
      - type: cloudify.relationships.depends_on
        target: hello_world_keypair
    interfaces:
      cloudify.interfaces.lifecycle:
        poststart:
          executor: central_deployment_agent
          implementation: scripts/cloudformation/expose_ip.py

  agent_key:
      type: cloudify.keys.nodes.RSAKey
      properties:
        resource_config:
          key_name: { get_input: agent_key_name }
          openssh_format: true
        use_secret_store: true
        use_secrets_if_exist: true
      interfaces:
        cloudify.interfaces.lifecycle:
          create:
            implementation: keys.cloudify_ssh_key.operations.create
            inputs:
              store_private_key_material: true

outputs:

  application_endpoint:
    description: The external endpoint of the application.
    value: { get_attribute: [ vm, Outputs, 0, OutputValue ] }
