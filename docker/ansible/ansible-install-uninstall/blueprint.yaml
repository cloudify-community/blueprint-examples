tosca_definitions_version: cloudify_dsl_1_5

description: This blueprint builds a docker image with Ansible and then runs a container using that image that reverts Ansible changes made in another container.

imports:
  - cloudify/types/types.yaml
  - plugin:cloudify-docker-plugin

inputs:

  docker_host:
    display_label: Docker Host
    type: string
    required: true

  docker_user:
    display_label: Docker User
    type: string
    required: true

  install_playbook_name:
    display_label: Install Playbook Name
    description: installation playbook name
    type: string
    default: "create.yaml"

  install_playbook:
    display_label: Install Playbook
    description: >
      installation playbook path [inside blueprint to be exported to docker host]
    type: string
    default: {concat: ["ansible/", {get_input: install_playbook_name}]}

  uninstall_playbook_name:
    display_label: Uninstall Playbook Name
    description: uninstallation playbook name
    type: string
    default: "delete.yaml"

  uninstall_playbook:
    display_label: Uninstall Playbook
    description: >
      uninstallation playbook path [inside blueprint to be exported to docker host]
    type: string
    default: {concat: ["ansible/", {get_input: uninstall_playbook_name}]}

  ansible_version:
    display_label: Ansible Version
    description: Ansible version to prepare image for
    type: string
    default: "2.9.5"

  image_tag:
    display_label: Image Tag
    description: Tag for the image to build
    type: string
    default: "ansible:"

  install_container_volume:
    display_label: Install Container Volume
    description: volume that will be mapped to container
    type: string
    default: "/install-ansible-playbooks"

  uninstall_container_volume:
    display_label: Uninstall Container Volume
    description: volume that will be mapped to container
    type: string
    default: "/uninstall-ansible-playbooks"

dsl_definitions:

  docker_config: &docker_config
    docker_host: { get_input: docker_host }
    docker_rest_port: 2375

node_templates:

  docker_ansible_image:
    type: cloudify.nodes.docker.image
    properties:
      client_config: *docker_config
      resource_config:
        image_content:
          concat:
            - |
              FROM amd64/centos:7
              MAINTAINER Cosmo (hello@cloudify.co)
              RUN yum install -y openssh-server openssh-clients
              RUN curl "https://bootstrap.pypa.io/pip/2.7/get-pip.py" -o "get-pip.py"
              RUN python get-pip.py
              RUN pip install --upgrade pip==9.0.1
            - |-
              RUN pip install ansible==
            - { get_input: ansible_version }
        tag:
          concat:
            - { get_input: image_tag }
            - { get_input: ansible_version }

  install_ansible_container_files:
    type: cloudify.nodes.docker.container_files
    properties:
      resource_config:
        docker_machine:
          docker_ip: { get_input: docker_host }
          docker_user: { get_input: docker_user }
          docker_key: { get_secret: agent_key_private }
        source: {get_input: install_playbook}
        destination: ""
        ansible_sources:
          container_volume: { get_input: install_container_volume }
          playbook_path:
            concat:
              - {get_input: install_container_volume }
              - /
              - {get_input: install_playbook_name}
          ansible_host: 127.0.0.1
          ansible_connection: local

  uninstall_ansible_container_files:
    type: cloudify.nodes.docker.container_files
    properties:
      resource_config:
        docker_machine:
          docker_ip: { get_input: docker_host }
          docker_user: { get_input: docker_user }
          docker_key: { get_secret: agent_key_private }
        source: {get_input: uninstall_playbook}
        destination: ""
        ansible_sources:
          container_volume: { get_input: uninstall_container_volume }
          playbook_path:
            concat:
              - {get_input: uninstall_container_volume }
              - /
              - {get_input: uninstall_playbook_name}
          ansible_host: 127.0.0.1
          ansible_connection: local

  docker_ansible_container:
    type: cloudify.nodes.docker.container
    properties:
      client_config: *docker_config
      resource_config:
        image_tag:
          concat:
            - { get_input: image_tag }
            - { get_input: ansible_version }
        container_args:
          command: { get_attribute: [install_ansible_container_files, ansible_container_command_arg] }
          working_dir: { get_input: install_container_volume }
          environment:
            ANSIBLE_HOST_KEY_CHECKING: false
            ANSIBLE_INVALID_TASK_ATTRIBUTE_FAILED: false
          volumes:
            - { get_input: install_container_volume }
            - { get_input: uninstall_container_volume }
          volumes_mapping:
            - { get_attribute: [install_ansible_container_files, destination] }
            - { get_attribute: [uninstall_ansible_container_files, destination] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: docker_ansible_image
      - type: cloudify.relationships.depends_on
        target: install_ansible_container_files
      - type: cloudify.relationships.depends_on
        target: uninstall_ansible_container_files
    interfaces:
      cloudify.interfaces.lifecycle:
        stop:
          implementation: docker.cloudify_docker.tasks.stop_container
          inputs:
            stop_command: { get_attribute: [uninstall_ansible_container_files, ansible_container_command_arg] }
