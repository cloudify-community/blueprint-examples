tosca_definitions_version: cloudify_dsl_1_5

description: Cloudify Docker blueprint. Deploys Docker.

imports:
  - cloudify/types/types.yaml
  - plugin:cloudify-fabric-plugin

inputs:
  infra_name:
    display_label: Infra Name
    description: >
      Name of infrastructure blueprint to deploy.
    type: string
    constraints:
      - valid_values:
          - openstack
          - azure
          - azure-arm
          - aws
          - aws-terraform
          - aws-cloudformation
          - gcp

  infra_archive:
    display_label: Infra Archive
    description: >
      URL of infra zip file.
    type: string
    # Don't update this line -
    # it is being updated automatically during merging.
    # The getting-started.zip will have the updated URL.
    default: 'https://github.com/cloudify-community/blueprint-examples/releases/download/5.0.5-10/virtual-machine.zip'

  infra_exists:
    display_label: Infra Exists
    type: string
    description: >
      Whether a getting started infrastructure blueprint has already been uploaded to the manager or not.
    default: false

  infra_deployment_id:
    display_label: Infra Deployment Id
    type: string
    description: The blueprint name, the deployment name.
    default: { concat: [ 'infra-', { get_input: infra_name } ] }

  env_name:
    display_label: Env Name
    type: string
    description: Control parameters for names in resources.
    default: mcdockerexample

node_templates:

  infrastructure:
    type: cloudify.nodes.Component
    properties:
      resource_config:
        blueprint:
          id: { get_input: infra_deployment_id }
          blueprint_archive: { get_input: infra_archive }
          main_file_name: { concat: [ { get_input: infra_name }, '.yaml' ] }
          external_resource: { get_input: infra_exists }
        deployment:
          id: { get_input: infra_deployment_id }
          inputs:
            env_name: { get_input: env_name }

  docker:
    type: cloudify.nodes.ApplicationServer
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/install_docker.sh
            fabric_env: &fabric_env
              host_string: { get_capability: [ { get_input: infra_deployment_id }, endpoint ] }
              user: { get_capability: [ { get_input: infra_deployment_id }, user ] }
              key: { get_capability: [ { get_input: infra_deployment_id }, key_content ] }
            use_sudo: true
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/uninstall_docker.sh
            fabric_env: *fabric_env
            use_sudo: true
    relationships:
      - type: cloudify.relationships.depends_on
        target: infrastructure

outputs:
  docker_api_url:
    description: Administration console URL
    value: { concat: [ 'http://', { get_capability: [ { get_input: infra_deployment_id }, endpoint] }, ':2375' ] }
