tosca_definitions_version: cloudify_dsl_1_5

description: This blueprint deploys some Azure infrastructure using Terraform.

imports:
  - cloudify/types/types.yaml
  - plugin:cloudify-terraform-plugin?version= >=0.15.0
  - https://raw.githubusercontent.com/cloudify-community/eaas-example/master/utils/custom_types.yaml

inputs:
  env_name:
    display_label: Env Name
    type: string
    default: ''
    constraints:
      - pattern: '(^ *$)|(^[a-zA-Z][a-zA-Z0-9]+$)'

  azure_location_name:
    type: string
    display_label: Azure location
    description: Select Azure location name
    default: EastUS
    constraints:
      - valid_values:
        - EastUS
        - CentralUS
        - WestUS
        - WestEurope
        - CanadaCentral

  cidr_block:
    display_label: Cidr Block
    type: string
    default: 10.0.0.0/16
    hidden: true

  subnet_1_cidr:
    display_label: Subnet 1 Cidr
    type: string
    default: 10.0.0.0/24
    hidden: true

  subnet_2_cidr:
    display_label: Subnet 2 Cidr
    type: string
    default: 10.0.1.0/24
    hidden: true

node_templates:
  prefix:
      type: eaas.nodes.UniquePrefixGenerator
      properties:
        predefined_value: { get_input: env_name }

  terraform:
    type: cloudify.nodes.terraform
    properties:
      resource_config:
        installation_source: https://releases.hashicorp.com/terraform/0.14.3/terraform_0.14.3_linux_amd64.zip

  terraform_module:
    type: cloudify.nodes.terraform.Module
    properties:
      resource_config:
        environment_variables:
          ARM_SUBSCRIPTION_ID: { get_secret: azure_subscription_id }
          ARM_TENANT_ID: { get_secret: azure_tenant_id }
          ARM_CLIENT_ID: { get_secret: azure_client_id }
          ARM_CLIENT_SECRET: { get_secret: azure_client_secret }
        variables:
          azure_location_name: { get_input: azure_location_name }
          rg_name: { concat : [ { get_attribute : [prefix, value] }, 'rg' ] }
          rg_tags:
            Name: { get_attribute : [prefix, value] }
          sg_name: { concat: [ { get_attribute : [prefix, value] }, '-cfy-agents' ] }
          vnet_name: { concat: [ { get_attribute : [prefix, value] }, '-vnet' ] }
          vnet_tags:
            Name: { concat: [ { get_attribute : [prefix, value] }, '-vnet' ] }
          cidr_block: { get_input: cidr_block }
          subnet_1_name: { concat: [ { get_attribute : [prefix, value] }, '-subnet-1' ] }
          subnet_1_cidr: { get_input: subnet_1_cidr }
          subnet_2_name: { concat: [ { get_attribute : [prefix, value] }, '-subnet-2' ] }
          subnet_2_cidr: { get_input: subnet_2_cidr }
          sa_name: { concat: [ { get_attribute : [prefix, value] }, 'sa' ] }
        source:
          location: templates/tf-azure-vpc-master.zip
    relationships:
      - target: terraform
        type: cloudify.terraform.relationships.run_on_host
      - target: prefix
        type: cloudify.relationships.depends_on

labels:
  obj-type:
    values:
      - aws
      - terraform

capabilities:
  rg_id:
    description: |
      Azure ID of the Resource Group
    value: { get_attribute: [ terraform_module, resources, rg, instances, 0, attributes, name ] }
  vn_id:
    description: |
      Azure ID of the Virtual Network
    value: { get_attribute: [ terraform_module, resources, vnet, instances, 0, attributes, name ] }
  subnet_ids:
    description: |
      Azure ID's of subnets
    value:
      - { get_attribute: [ terraform_module, resources, subnet_1, instances, 0, attributes, name ] }
      - { get_attribute: [ terraform_module, resources, subnet_2, instances, 0, attributes, name ] }
  agents_security_group_id:
    description: |
      Azure ID of a security group that allows Cloudify Manager to access
      VM's via SSH
    value: { get_attribute: [ terraform_module, resources, sg, instances, 0, attributes, name ] }
  sa_id:
    description: |
      Azure ID of the Storage Account
    value: { get_attribute: [ terraform_module, resources, sa, instances, 0, attributes, name ] }
